{"version":3,"sources":["AddTodo.js","Button.js","Header.js","Todo.js","Counter.js","Todos.js","App.js","reportWebVitals.js","index.js"],"names":["AddTodo","onAdd","useState","text","setText","date","setDate","reminder","setReminder","className","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","Button","color","classControl","onClick","style","backgroundColor","protoTypes","PropTypes","string","func","Header","title","handleForm","handleInnerText","defaultProps","Todo","todo","handleDelete","onToggle","handleComplete","onDoubleClick","id","cursor","Counter","number","spanClass","Todos","todos","countNumber","filter","complete","length","map","console","log","LOCAL_STORAGE_KEY","App","displayForm","setDisplayForm","setTodos","useEffect","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","Date","getTime","newTodo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.98494f1d.chunk.js","sourcesContent":["import React, {useState} from \"react\";\n\nconst AddTodo = ({onAdd}) => {\n  const [text, setText] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [reminder, setReminder] = useState(false);\n\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    //make sure that the user has inputed a valid content(text)\n\n    if (!text) {\n      alert(\"please add a task todo\");\n      return;\n    }\n\n    onAdd({text, date, reminder });\n    //then restting  back the values to default(clearing the input form)\n    setText(\"\");\n    setDate(\"\");\n    setReminder(false);\n \n  };\n\n  return (\n    <form className=\"add-form\" onSubmit={onSubmit}>\n      <div className=\"form-control\">\n        <label>Todo</label>\n        <input\n          type=\"text\"\n          placeholder=\"add a task todo\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n        />\n      </div>\n      <div className=\"form-control\">\n        <label>Date and Time</label>\n        <input\n          type=\"text\"\n          placeholder=\"add date and time\"\n          value={date}\n          onChange={(e) => setDate(e.target.value)}\n        />\n      </div>\n      <div className=\"form-control form-control-check\">\n        <label>Set Reminder</label>\n        <input\n          type=\"checkbox\"\n          value={reminder}\n          checked={reminder}\n          onChange={(e) => setReminder(e.currentTarget.checked)}\n        />\n      </div>\n      <input type=\"submit\" value=\"Save todo\" className=\"btn btn-block\" />\n    </form>\n  );\n};\n\nexport default AddTodo;\n","import React from 'react'\nimport PropTypes from 'react';\n//Passing PROPS(like parameters) that will later be replaced with arguments\n//ex. Color:\"green\",text:\"Add to do\" onClick:\"addTodo()=>{}\"\"\nconst Button = ({color,text,classControl,onClick}) => {\n\n  \n    return (\n        <button  onClick={onClick}style={{backgroundColor:color}}className={classControl}>{text}</button>\n    )\n}\n\nButton.protoTypes ={\n    text:PropTypes.string,\n    color:PropTypes.string,\n    onClick:PropTypes.func,\n}\n\nexport default Button\n","import React from \"react\";\nimport Button from \"./Button\";\n\nconst Header = ({title, handleForm, handleInnerText}) => {\n  return (\n    //here we are replacing the props with their corresponding arguments\n    //checking conditions if form is displayed then btn.txt=\"Close\" btn.color=\"red\" and vise versa\n    <header className=\"header\">\n      <h1>{title}</h1>\n      <Button\n        classControl={\"btn\"}\n        color={handleInnerText ? \"red\" : \"green\"}\n        text={handleInnerText ? \"Close\" : \"Add\"}\n        onClick={handleForm}\n      />\n    </header>\n  );\n};\n//We are setting a deafault Props for our header\nHeader.defaultProps = {\n  title: \"My Todo List\",\n};\n\n\n\nexport default Header;\n","import React from \"react\";\nimport {FaTimes} from \"react-icons/fa\";\n\nconst Todo = ({todo, handleDelete, onToggle,handleComplete}) => {\n  //if the specific todo reminder property has been set to true then we add a\"reminder\" class which adds green border on the left side\n  //else we don't add the reminder class it will have only the todo class(the green is removed)\n  \n  \n  return (\n    <div\n      className={`todo ${todo.reminder ? \"reminder\" : \"\"}`}\n      onDoubleClick={() => onToggle(todo.id)}\n    >\n      \n      <h3>\n        {todo.text}{\" \"}\n        <FaTimes\n          style={{color: \"red\", cursor: \"pointer\"}}\n          onClick={() => handleDelete(todo.id)}\n        />\n      </h3>\n      <p> {todo.date}</p>\n    </div>\n  );\n};\n\nexport default Todo;\n","import React from 'react';\n\nconst Counter = ({color,text,number,spanClass}) => {\n    return (\n        <div className=\"counter\" >\n        \n        <p><span style={{color:color}} className={spanClass} >{number}</span>{text}</p>\n        </div>\n    )\n}\n\nexport default Counter\n","import Todo from \"./Todo\";\nimport Button from './Button';\nimport Counter from \"./Counter\";\nconst Todos = ({ todos, handleDelete ,onToggle}) => {\n  const clearAllDone=()=>{\n    console.log(\"clear done btn clicked\")\n}\nlet countNumber=`${todos.filter(todo=> !todo.complete).length}`;\n    return (\n      \n      <>\n      <Counter spanClass={` counter ${countNumber>0 ? \"show\" : \"hide\" }`} number={countNumber} color={`${countNumber <5 ? \"orange\":\"red\"} `} text={` ${countNumber>0 ? \"Undone Tasks left\":\"All Done!\\nNow you can clear all done Tasks\"} `}/>\n     \n      {todos.map((todo)=>(\n          <Todo key={todo.id} todo={todo} handleDelete={handleDelete} onToggle={onToggle} />\n\n      ))}\n      <Button  color=\"red\" text=\"Clear Done\" classControl={`btn ${todos.filter(todo=> todo.complete).length>=1 ? \"show\" : \"hide\"} `} onClick={clearAllDone} />\n      </>\n    )\n}\n\nexport default Todos\n","import React, {useState,useEffect} from \"react\";\nimport AddTodo from \"./AddTodo\";\nimport Header from \"./Header\";\nimport Todos from \"./Todos\";\n\nconst LOCAL_STORAGE_KEY=\"todoApp.todos\";\n\nconst App = () => {\n  const [displayForm, setDisplayForm] = useState(false);\n\n  const [todos, setTodos] = useState([]);\n\nuseEffect(()=>{\n  const storedTodos=JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\n  if(storedTodos) setTodos(storedTodos)\n\n},[])\n\n  useEffect(()=>{\n    localStorage.setItem(LOCAL_STORAGE_KEY,JSON.stringify(todos))},[todos])\n\n   \n  //Add todo\n  const addTodo = (todo) => {\n    const id = new Date().getTime();\n    const newTodo = {id, ...todo};\n    console.log(newTodo);\n    setTodos([...todos, newTodo]);\n  };\n//Handdle complete\n\n\n  //delete todo\n  const deleteTodo = (id) => {\n    setTodos(todos.filter((todo) => todo.id !== id));\n  };\n  // are maping through the array of todos and if the target todo.id===id then we destructure the task and we change the state of its reminder property into the oposit(if it was true=>false and visa versa)\n  \n  const toggleReminder = (id) => {\n    setTodos(\n      todos.map((todo) =>\n        todo.id === id ? {...todo, reminder: !todo.reminder} : todo\n      )\n    );\n    console.log(id);\n  };\n\n  return (\n    <div className=\"container\">\n      <Header\n        handleForm={() => setDisplayForm(!displayForm)}\n        handleInnerText={displayForm}\n      />\n      {displayForm && <AddTodo onAdd={addTodo} />}\n      {todos.length > 0 ? (\n        <Todos\n          todos={todos}\n          handleDelete={deleteTodo}\n          onToggle={toggleReminder}\n        />\n      ) : (\n        \"No Todos to show\"\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}